name: Application CD - Kubernetes Deployment in AWS EKS

on: 
  workflow_dispatch:
    inputs:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      aws_session_token:
        description: 'AWS Session Token'
        required: true
      aws_account_id:
        description: 'AWS Account ID'
        required: true
      aws_backend_bucket:
        description: 'AWS S3 Bucket Terraform State'
        required: true
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'

jobs:
  terraform:
    name: Application Deployment
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
  
    steps:
      
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Mascarar Credenciais
      run: |
        echo "::add-mask::${{ github.event.inputs.aws_access_key_id }}"
        echo "::add-mask::${{ github.event.inputs.aws_secret_access_key }}"
        echo "::add-mask::${{ github.event.inputs.aws_session_token }}"
        echo "::add-mask::${{ github.event.inputs.aws_account_id }}"
        echo "::add-mask::${{ github.event.inputs.aws_backend_bucket }}"
        echo "::add-mask::${{ github.event.inputs.aws_region }}"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Configure AWS CLI 
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ github.event.inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ github.event.inputs.aws_secret_access_key }}
        aws-session-token: ${{ github.event.inputs.aws_session_token }}
        aws-region: ${{ github.event.inputs.aws_region }}
            
    - name: Verify AWS CLI Configuration
      run: aws sts get-caller-identity

    - name: Download terraform_infrastructure.json from S3 infrastructure jackapp-infra/terraform.tfstate
      run: | 
        aws s3 cp s3://${{ github.event.inputs.aws_backend_bucket }}/jackapp-infra/terraform.tfstate terraform_infrastructure.json 
        
    - name: Extract EKS Cluster Name 
      id: extract-cluster-name
      run: | 
        CLUSTER_NAME=$(jq -r '.outputs.jackapp_cluster_name.value' terraform_infrastructure.json)
        echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_OUTPUT

    - name: Extract SQS Url for Processing
      id: sqs-processing
      run: | 
        SQS_QUEUE_URL=$(jq -r '.outputs["sqs-canal-de-processamento-url"].value' terraform_infrastructure.json)
        echo "SQS_QUEUE_URL=$SQS_QUEUE_URL" >> $GITHUB_OUTPUT

    - name: Extract SNS Topic ARN for Status
      id: sns-status-topic-arn
      run: | 
        SNS_STATUS_TOPIC_ARN=$(jq -r '.outputs["sns-status-de-processamento-arn"].value' terraform_infrastructure.json)
        echo "SNS_STATUS_TOPIC_ARN=$SNS_STATUS_TOPIC_ARN" >> $GITHUB_OUTPUT

    - name: Extract SNS Topic ARN for Error
      id: sns-error-topic-arn
      run: | 
        SNS_ERROR_TOPIC_ARN=$(jq -r '.outputs["sns-falhas-de-processamento-arn"].value' terraform_infrastructure.json)
        echo "SNS_ERROR_TOPIC_ARN=$SNS_ERROR_TOPIC_ARN" >> $GITHUB_OUTPUT

    - name: Update kubeconfig 
      run: | 
        aws eks update-kubeconfig --name ${{ steps.extract-cluster-name.outputs.CLUSTER_NAME }} --region ${{ github.event.inputs.aws_region }} 
    
    - name: Create file jackapp-processamento-configmap.yaml
      working-directory: manifesto_kubernetes/
      run: |
          cat <<EOF > jackapp-processamento-configmap.yaml
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: jackapp-processamento-configmap
          data:
            AWS_REGION: "${{ github.event.inputs.aws_region }}"
            SQS_QUEUE_URL: "${{steps.sqs-processing.outputs.SQS_QUEUE_URL}}"
            SNS_STATUS_TOPIC_ARN: "${{ steps.sns-status-topic-arn.outputs.SNS_STATUS_TOPIC_ARN }}"
            SNS_ERROR_TOPIC_ARN: "${{ steps.sns-error-topic-arn.outputs.SNS_ERROR_TOPIC_ARN }}"
            S3_BUCKET_NAME: "${{ github.event.inputs.aws_backend_bucket }}"
            SQS_QUEUE_URL: "${{steps.sqs-processing.outputs.SQS_QUEUE_URL}}"
            SNS_STATUS_TOPIC_ARN: "${{ steps.sns-status-topic-arn.outputs.SNS_STATUS_TOPIC_ARN }}"
            SNS_ERROR_TOPIC_ARN: "${{ steps.sns-error-topic-arn.outputs.SNS_ERROR_TOPIC_ARN }}"
            S3_BUCKET_NAME: "${{ github.event.inputs.aws_backend_bucket }}"
          EOF


    - name: Deploy in AWS EKS Cluster
      working-directory: manifesto_kubernetes/ 
      run: |
        kubectl apply -f jackapp-processamento-configmap.yaml
        kubectl apply -f jackapp-processamento-hpa.yaml
        kubectl apply -f jackapp-processamento-deployment.yaml
